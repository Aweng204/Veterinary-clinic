package veterinary;
import java.awt.BorderLayout;
import java.awt.*;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Label;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;

import javax.swing.border.EmptyBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import javax.swing.table.TableModel;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import com.toedter.calendar.JDateChooser;

public class VetPets extends JFrame {

	private JTable tblRecords;
	private JPanel contentPane;

	Connection conn;
	PreparedStatement pst;
	private JDateChooser chBday;
	private Label lblSex;
	private JComboBox cboxSex;
	private Label lblBreed;
	private Label lblColor;
	private Label lblSpecie;
	private JTextField txtBreed;
	private JTextField txtColor;
	private JTextField txtSpecie;
	
	// table update
	private void tableUpdate() {
		int c;
		try {
			conn = DriverManager.getConnection("jdbc:mysql://localhost/veterinaryms", "root", "");
			pst = conn.prepareStatement("select * from pet_infos");
			ResultSet rs = pst.executeQuery();
			ResultSetMetaData rss = rs.getMetaData();
			c = rss.getColumnCount();

			DefaultTableModel dtm = (DefaultTableModel) tblRecords.getModel();
			dtm.setRowCount(0);

			while (rs.next()) {
				Vector v2 = new Vector();

				for (int a = 1; a <= c; a++) {
					v2.add(rs.getString("petID"));
					v2.add(rs.getString("ownerName"));
					v2.add(rs.getString("petName"));
					v2.add(rs.getString("petBday"));
					v2.add(rs.getString("petSex"));
					v2.add(rs.getString("petBreed"));
					v2.add(rs.getString("petColor"));
					v2.add(rs.getString("petSpecie"));
				}

				dtm.addRow(v2);
			}
		}

		catch (Exception ev) {
			{
				System.out.println(ev);
			}
			;
		}
	}

	// This is the main method.
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VetPets frame = new VetPets();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	// Create the frame.
	public VetPets() {
		setTitle("Pet Record");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 967, 438);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		contentPane.setLayout(null);

		JLabel lblNewLabel = new JLabel("PET RECORDS\r\n");
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(21, 11, 893, 44);
		lblNewLabel.setFont(new Font("Arial", Font.PLAIN, 22));
		contentPane.add(lblNewLabel);

		JPanel panel = new JPanel();
		panel.setBounds(21, 66, 319, 287);
		panel.setForeground(new Color(0, 0, 0));
		panel.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, new Color(255, 255, 255), new Color(160, 160, 160)), "Pet Information", TitledBorder.LEFT, TitledBorder.TOP, null, new Color(0, 0, 0)));
		contentPane.add(panel);
		panel.setLayout(null);

		Panel Registration = new Panel();
		Registration.setBounds(10, 16, 299, 216);
		panel.add(Registration);
		Registration.setLayout(null);

		Label lblPet = new Label("Pet Name: ");
		lblPet.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblPet.setBounds(10, 39, 70, 22);
		Registration.add(lblPet);

		JTextField txtOwnName = new JTextField();
		txtOwnName.setBounds(100, 11, 181, 22);
		Registration.add(txtOwnName);
		txtOwnName.setColumns(10);

		JTextField txtPetName = new JTextField();
		txtPetName.setBounds(100, 39, 181, 22);
		Registration.add(txtPetName);
		txtPetName.setColumns(10);
		
		Label lblBday = new Label("Birthdate: ");
		lblBday.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblBday.setBounds(10, 67, 70, 22);
		Registration.add(lblBday);
		
		JDateChooser chBday = new JDateChooser();
		chBday.setDateFormatString("yyyy-MM-dd\r\n");
		chBday.setBounds(100, 67, 125, 20);
		Registration.add(chBday);
		
		Label lblSex = new Label("Sex:");
		lblSex.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblSex.setBounds(10, 96, 70, 22);
		Registration.add(lblSex);
		
		JComboBox cboxSex = new JComboBox();
		cboxSex.setModel(new DefaultComboBoxModel(new String[] {"    ", "Male", "Female"}));
		cboxSex.setBounds(100, 96, 84, 22);
		Registration.add(cboxSex);
		
		Label lblBreed = new Label("Breed:");
		lblBreed.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblBreed.setBounds(10, 125, 70, 22);
		Registration.add(lblBreed);
		
		Label lblColor = new Label("Color:");
		lblColor.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblColor.setBounds(10, 153, 70, 22);
		Registration.add(lblColor);
		
		Label lblSpecie = new Label("Specie:");
		lblSpecie.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblSpecie.setBounds(10, 181, 70, 22);
		Registration.add(lblSpecie);
		
		JTextField txtBreed = new JTextField();
		txtBreed.setColumns(10);
		txtBreed.setBounds(100, 125, 181, 22);
		Registration.add(txtBreed);
		
		JTextField txtColor = new JTextField();
		txtColor.setColumns(10);
		txtColor.setBounds(100, 153, 181, 22);
		Registration.add(txtColor);
		
		JTextField txtSpecie = new JTextField();
		txtSpecie.setColumns(10);
		txtSpecie.setBounds(100, 181, 181, 22);
		Registration.add(txtSpecie);
		
		Label lblOwner = new Label("Owner Name: ");
		lblOwner.setBounds(10, 11, 84, 22);
		Registration.add(lblOwner);
		lblOwner.setFont(new Font("Dialog", Font.PLAIN, 12));

		// Add Menu
		JButton btnAdd = new JButton("Add");
		btnAdd.setBounds(20, 242, 95, 23);
		panel.add(btnAdd);

		// Edit Menu
		JButton btnEdit = new JButton("Edit");
		btnEdit.setBounds(125, 242, 70, 23);
		panel.add(btnEdit);

		// Delete
		JButton btnDelete = new JButton("Delete");
		btnDelete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				DefaultTableModel dtm = (DefaultTableModel) tblRecords.getModel();
				int selectedIndex = tblRecords.getSelectedRow();

				try {
					Connection conn;
					PreparedStatement pst;
					
					int id = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
					int dialogResult = JOptionPane.showConfirmDialog(null,
							"Are you sure you want to delete this record?", "Warning", JOptionPane.YES_NO_OPTION);
					if (dialogResult == JOptionPane.YES_OPTION) {
						Class.forName("com.mysql.cj.jdbc.Driver");
						conn = DriverManager.getConnection("jdbc:mysql://localhost/veterinaryms", "root", "");
						pst = conn.prepareStatement("delete from pet_infos where petID=?");

						pst.setInt(1, id);
						pst.executeUpdate();
						pst.executeUpdate();
						
						JOptionPane.showMessageDialog(null, "Record successfully deleted!");
						tableUpdate();

						// clear all fields
						txtOwnName.setText("");
						txtPetName.setText("");
						chBday.setDate(null);
						cboxSex.setSelectedIndex(-1);
						txtBreed.setText("");
						txtColor.setText("");
						txtSpecie.setText("");
						
						// focus on the first field
						txtOwnName.requestFocus();
					}
				} catch (Exception ev) {
					{
						System.out.println(ev);
					}
					;
				}

			}
		});

		btnDelete.setBounds(205, 242, 93, 23);
		panel.add(btnDelete);

		// Edit Record
		btnEdit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				DefaultTableModel dtm = (DefaultTableModel) tblRecords.getModel();
				int selectedIndex = tblRecords.getSelectedRow();

				try {
					Connection conn;
					PreparedStatement pst;
					
					int id = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
					String owner = txtOwnName.getText();
					String pet = txtPetName.getText();
					String birth = ((JTextField)chBday.getDateEditor().getUiComponent()).getText();
					String sex = cboxSex.getSelectedItem().toString();
					String breed = txtBreed.getText();
					String color = txtColor.getText();
					String specie = txtSpecie.getText();

					Class.forName("com.mysql.cj.jdbc.Driver");
					conn = DriverManager.getConnection("jdbc:mysql://localhost/veterinaryms", "root", "");
					pst = conn.prepareStatement("update pet_infos set ownerName=?, petName=?, petBday=?, petSex=?, "
							+ "petBreed=?, petColor=?, petSpecie=? where petID=?");

					pst.setString(1, owner);
					pst.setString(2, pet);
					pst.setString(3, birth);
					pst.setString(4, sex);
					pst.setString(5, breed);
					pst.setString(6, color);
					pst.setString(7, specie);
					pst.setInt(8, id);
					pst.executeUpdate();

					JOptionPane.showMessageDialog(null, "Record successfully updated!");
					tableUpdate();

					// clear all fields
					txtOwnName.setText("");
					txtPetName.setText("");
					chBday.setDate(null);
					cboxSex.setSelectedIndex(-1);
					txtBreed.setText("");
					txtColor.setText("");
					txtSpecie.setText("");
					
					// focus on the first field
					txtOwnName.requestFocus();

				}

				catch (Exception ev) {
					{
						System.out.println(e);
					}
					;
				}
			}
		});

		// Add Record
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Connection conn;
				PreparedStatement pst;
				
				String owner = txtOwnName.getText();
				String pet = txtPetName.getText();
				String birth = ((JTextField)chBday.getDateEditor().getUiComponent()).getText();
				String sex = cboxSex.getSelectedItem().toString();
				String breed = txtBreed.getText();
				String color = txtColor.getText();
				String specie = txtSpecie.getText();
				tableUpdate();

				try {
					Class.forName("com.mysql.cj.jdbc.Driver");
					conn = DriverManager.getConnection("jdbc:mysql://localhost/veterinaryms", "root", "");

					pst = conn.prepareStatement("insert into pet_infos (ownerName, petName, petBday, petSex, petBreed, petColor, petSpecie) values(?,?,?,?,?,?,?)");
					pst.setString(1, owner);
					pst.setString(2, pet);
					pst.setString(3, birth);
					pst.setString(4, sex);
					pst.setString(5, breed);
					pst.setString(6, color);
					pst.setString(7, specie);
					pst.executeUpdate();

					JOptionPane.showMessageDialog(null, "Record successfully added!");
					tableUpdate();

					// clear all fields
					txtOwnName.setText("");
					txtPetName.setText("");
					chBday.setDate(null);
					cboxSex.setSelectedIndex(-1);
					txtBreed.setText("");
					txtColor.setText("");
					txtSpecie.setText("");
					
					// focus on the first field
					txtOwnName.requestFocus();

				}

				catch (Exception ev) {
					{
						System.out.println(e);
					}
					;
				}
			}

		});

		// This is the table.
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
		scrollPane.setBounds(366, 66, 548, 287);
		scrollPane.addPropertyChangeListener(new PropertyChangeListener() {
			public void propertyChange(PropertyChangeEvent evt) {
			}
		});
		contentPane.add(scrollPane);

		tblRecords = new JTable();
		tblRecords.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				DefaultTableModel dtm = (DefaultTableModel) tblRecords.getModel();
				int selectedIndex = tblRecords.getSelectedRow();

				txtOwnName.setText(dtm.getValueAt(selectedIndex, 1).toString());
				txtPetName.setText(dtm.getValueAt(selectedIndex, 2).toString());
				chBday.setDateFormatString(dtm.getValueAt(selectedIndex, 3).toString());
				cboxSex.setSelectedItem(dtm.getValueAt(selectedIndex, 4).toString());
				txtBreed.setText(dtm.getValueAt(selectedIndex, 5).toString());
				txtColor.setText(dtm.getValueAt(selectedIndex, 6).toString());
				txtSpecie.setText(dtm.getValueAt(selectedIndex, 7).toString());
				
			}

		});

		tblRecords.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Pet ID", "Owner Name", "Pet Name", "Birthdate", "Sex", "Breed", "Color", "Specie"
			}) {
			
			Class[] columnTypes = new Class[] { Integer.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class };
			
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];}
			});
		scrollPane.setViewportView(tblRecords);

		JButton btnDisplay = new JButton("DISPLAY RECORDS");
		btnDisplay.setBounds(576, 364, 214, 23);
		btnDisplay.setFont(new Font("Tahoma", Font.PLAIN, 14));
		contentPane.add(btnDisplay);
		
		JButton back = new JButton("Back");
		back.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				MainEra mr = new MainEra();
				mr.setVisible(true);
				dispose();
			}
		});
		back.setBounds(21, 363, 85, 21);
		contentPane.add(back);
		
		btnDisplay.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				tableUpdate();
			}
		});

	}

	public TableModel getTableModel() {
		return tblRecords.getModel();
	}

	public void setTableModel(TableModel model) {
		tblRecords.setModel(model);
	}
}
