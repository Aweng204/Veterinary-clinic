package veterinary;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Image;
import java.awt.Label;
import java.awt.Panel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.util.Vector;

import javax.swing.border.EmptyBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import javax.swing.table.TableModel;

import com.toedter.calendar.JDateChooser;
import javax.swing.border.LineBorder;
import java.awt.Component;

@SuppressWarnings("serial")
public class VetPrescription extends JFrame {

	private JTable tblPresRecords;
	private JPanel contentPane;

	Connection conn;
	PreparedStatement pst;
	private Label lblVet;
	private JTextField txtVet;
	private JTextField txtQty;
	private JTextField txtPresDesc;
	private JTextField txtNotes;
	private JButton btnPrint;
	
	// table update
	private void tableUpdate() {
		int c;
		try {
			conn = DriverManager.getConnection("jdbc:mysql://localhost/vetclinic1", "root", "");
			pst = conn.prepareStatement("select * from prescription");
			ResultSet rs = pst.executeQuery();
			ResultSetMetaData rss = rs.getMetaData();
			c = rss.getColumnCount();

			DefaultTableModel dtm = (DefaultTableModel) tblPresRecords.getModel();
			dtm.setRowCount(0);

			while (rs.next()) {
				Vector v2 = new Vector();

				for (int a = 1; a <= c; a++) {
					v2.add(rs.getString("presID"));
					v2.add(rs.getString("presDate"));
					v2.add(rs.getString("presOwner"));
					v2.add(rs.getString("presPet"));
					v2.add(rs.getString("presVet"));
					v2.add(rs.getString("medication"));
					v2.add(rs.getString("dosage"));
					v2.add(rs.getString("form"));
					v2.add(rs.getString("quantity"));
					v2.add(rs.getString("frequency"));
					v2.add(rs.getString("presNotes"));
				}

				dtm.addRow(v2);
			}
		}

		catch (Exception ev) {
			{
				System.out.println(ev);
			}
			;
		}
	}

	// This is the main method.
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					VetPrescription frame = new VetPrescription();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	// Create the frame.
	public VetPrescription() {
		setTitle("Prescription");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 972, 650);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		contentPane.setLayout(null);

		JLabel lblNewLabel = new JLabel("PRESCRIPTION");
		lblNewLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
		lblNewLabel.setBounds(21, 11, 214, 44);
		lblNewLabel.setFont(new Font("Arial", Font.BOLD, 22));
		contentPane.add(lblNewLabel);

		JPanel panel = new JPanel();
		panel.setBounds(21, 73, 341, 479);
		panel.setForeground(new Color(0, 0, 0));
		panel.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED, new Color(255, 255, 255), new Color(160, 160, 160)), "Prescription Details", TitledBorder.LEFT, TitledBorder.TOP, null, new Color(0, 0, 0)));
		contentPane.add(panel);
		panel.setLayout(null);

		Panel Registration = new Panel();
		Registration.setBounds(10, 16, 321, 396);
		panel.add(Registration);
		Registration.setLayout(null);

		Label lblPet = new Label("Pet Name: ");
		lblPet.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblPet.setBounds(10, 68, 70, 22);
		Registration.add(lblPet);

		JTextField txtPetName = new JTextField();
		txtPetName.setBounds(100, 68, 211, 22);
		Registration.add(txtPetName);
		txtPetName.setColumns(10);
		
		Label lblPresDate = new Label("Pres. Date: ");
		lblPresDate.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblPresDate.setBounds(10, 11, 70, 22);
		Registration.add(lblPresDate);
		
		JDateChooser chDate = new JDateChooser();
		chDate.setDateFormatString("yyyy-MM-dd\r\n");
		chDate.setBounds(100, 11, 108, 20);
		Registration.add(chDate);
		
		Label lblMed = new Label("Medication:");
		lblMed.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblMed.setBounds(10, 164, 70, 22);
		Registration.add(lblMed);
		
		Label lblDose = new Label("Dosage:");
		lblDose.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblDose.setBounds(10, 192, 70, 22);
		Registration.add(lblDose);
		
		Label lblForm = new Label("Form:");
		lblForm.setFont(new Font("Dialog", Font.PLAIN, 12));
		lblForm.setBounds(10, 220, 70, 22);
		Registration.add(lblForm);
		
		JTextField txtMed = new JTextField();
		txtMed.setColumns(10);
		txtMed.setBounds(100, 164, 211, 22);
		Registration.add(txtMed);
		
		JTextField txtDose = new JTextField();
		txtDose.setColumns(10);
		txtDose.setBounds(100, 192, 211, 22);
		Registration.add(txtDose);
		
		JTextField txtForm = new JTextField();
		txtForm.setColumns(10);
		txtForm.setBounds(100, 220, 211, 22);
		Registration.add(txtForm);
		
		Label lblOwner = new Label("Owner Name: ");
		lblOwner.setBounds(10, 39, 84, 22);
		Registration.add(lblOwner);
		lblOwner.setFont(new Font("Dialog", Font.PLAIN, 12));
		
				JTextField txtOwnName = new JTextField();
				txtOwnName.setBounds(100, 39, 211, 22);
				Registration.add(txtOwnName);
				txtOwnName.setColumns(10);
				
				Label lblVet = new Label("Veterinarian:");
				lblVet.setFont(new Font("Dialog", Font.PLAIN, 12));
				lblVet.setBounds(10, 96, 70, 22);
				Registration.add(lblVet);
				
				JTextField txtVetName = new JTextField();
				txtVetName.setColumns(10);
				txtVetName.setBounds(100, 96, 211, 22);
				Registration.add(txtVetName);
				
				Label rx = new Label("RX");
				rx.setFont(new Font("Dialog", Font.BOLD, 14));
				rx.setBounds(10, 136, 84, 22);
				Registration.add(rx);
				
				Label lblQty = new Label("Quantity:");
				lblQty.setFont(new Font("Dialog", Font.PLAIN, 12));
				lblQty.setBounds(10, 248, 70, 22);
				Registration.add(lblQty);
				
				JTextField txtQty = new JTextField();
				txtQty.setColumns(10);
				txtQty.setBounds(100, 248, 70, 22);
				Registration.add(txtQty);
				
				Label lblFreq = new Label("Frequency:");
				lblFreq.setFont(new Font("Dialog", Font.PLAIN, 12));
				lblFreq.setBounds(10, 276, 70, 22);
				Registration.add(lblFreq);
				
				JTextField txtFreq = new JTextField();
				txtFreq.setColumns(10);
				txtFreq.setBounds(100, 276, 211, 22);
				Registration.add(txtFreq);
				
				Label lblNotes = new Label("Notes:");
				lblNotes.setFont(new Font("Dialog", Font.PLAIN, 12));
				lblNotes.setBounds(10, 304, 70, 22);
				Registration.add(lblNotes);
				
				JTextField txtNotes = new JTextField();
				txtNotes.setColumns(10);
				txtNotes.setBounds(100, 304, 211, 81);
				Registration.add(txtNotes);

		// Add Menu
		JButton btnAdd = new JButton("ADD");
		btnAdd.setFont(new Font("Arial", Font.PLAIN, 12));
		btnAdd.setBounds(21, 432, 87, 23);
		panel.add(btnAdd);

		// Edit Menu
		JButton btnEdit = new JButton("EDIT");
		btnEdit.setFont(new Font("Arial", Font.PLAIN, 12));
		btnEdit.setBounds(128, 432, 87, 23);
		panel.add(btnEdit);

		// Delete
		JButton btnDelete = new JButton("DELETE");
		btnDelete.setFont(new Font("Arial", Font.PLAIN, 12));
		btnDelete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				DefaultTableModel dtm = (DefaultTableModel) tblPresRecords.getModel();
				int selectedIndex = tblPresRecords.getSelectedRow();

				try {
					Connection conn;
					PreparedStatement pst;
					
					int id = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
					int dialogResult = JOptionPane.showConfirmDialog(null,
							"Are you sure you want to delete this record?", "Warning", JOptionPane.YES_NO_OPTION);
					if (dialogResult == JOptionPane.YES_OPTION) {
						Class.forName("com.mysql.cj.jdbc.Driver");
						conn = DriverManager.getConnection("jdbc:mysql://localhost/vetclinic1", "root", "");
						pst = conn.prepareStatement("delete from prescription where presID=?");

						pst.setInt(1, id);
						pst.executeUpdate();
						pst.executeUpdate();
						
						JOptionPane.showMessageDialog(null, "Record successfully deleted!");
						tableUpdate();

						// clear all fields
						chDate.setDate(null);
						txtOwnName.setText("");
						txtPetName.setText("");
						txtVetName.setText("");
						txtMed.setText("");
						txtDose.setText("");
						txtForm.setText("");
						txtQty.setText("");
						txtFreq.setText("");
						txtNotes.setText("");
						
						// focus on the first field
						txtOwnName.requestFocus();
					}
				} catch (Exception ev) {
					{
						System.out.println(ev);
					}
					;
				}

			}
		});

		btnDelete.setBounds(233, 432, 87, 23);
		panel.add(btnDelete);

		// Edit Record
		btnEdit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				DefaultTableModel dtm = (DefaultTableModel) tblPresRecords.getModel();
				int selectedIndex = tblPresRecords.getSelectedRow();

				try {
					Connection conn;
					PreparedStatement pst;
					
					int id = Integer.parseInt(dtm.getValueAt(selectedIndex, 0).toString());
					String date = ((JTextField)chDate.getDateEditor().getUiComponent()).getText();
					String owner = txtOwnName.getText();
					String pet = txtPetName.getText();
					String vet = txtVetName.getText();
					String med = txtMed.getText();
					String dose = txtDose.getText();
					String form = txtForm.getText();
					String qty = txtQty.getText();
					String freq = txtFreq.getText();
					String note = txtNotes.getText();

					Class.forName("com.mysql.cj.jdbc.Driver");
					conn = DriverManager.getConnection("jdbc:mysql://localhost/vetclinic1", "root", "");
					pst = conn.prepareStatement("update prescription set presDate=?, presOwner=?, presPet=?, presVet=?, "
							+ "medication=?, dosage=?, form=?, quantity=?, frequency=?, presNotes=? where presID=?");

					pst.setString(1, date);
					pst.setString(2, owner);
					pst.setString(3, pet);
					pst.setString(4, vet);
					pst.setString(5, med);
					pst.setString(6, dose);
					pst.setString(7, form);
					pst.setString(8, qty);
					pst.setString(9, freq);
					pst.setString(10, note);
					pst.setInt(11, id);
					pst.executeUpdate();

					JOptionPane.showMessageDialog(null, "Record successfully updated!");
					tableUpdate();

					// clear all fields
					chDate.setDate(null);
					txtOwnName.setText("");
					txtPetName.setText("");
					txtVetName.setText("");
					txtMed.setText("");
					txtDose.setText("");
					txtForm.setText("");
					txtQty.setText("");
					txtFreq.setText("");
					txtNotes.setText("");
					
					// focus on the first field
					txtOwnName.requestFocus();

				}

				catch (Exception ev) {
					{
						System.out.println(e);
					}
					;
				}
			}
		});

		// Add Record
		btnAdd.addActionListener(new ActionListener() {

			public void actionPerformed(ActionEvent e) {
				Connection conn;
				PreparedStatement pst;
				
				String date = ((JTextField)chDate.getDateEditor().getUiComponent()).getText();
				String owner = txtOwnName.getText();
				String pet = txtPetName.getText();
				String vet = txtVetName.getText();
				String med = txtMed.getText();
				String dose = txtDose.getText();
				String form = txtForm.getText();
				String qty = txtQty.getText();
				String freq = txtFreq.getText();
				String note = txtNotes.getText();
				tableUpdate();

				try {
					Class.forName("com.mysql.cj.jdbc.Driver");
					conn = DriverManager.getConnection("jdbc:mysql://localhost/vetclinic1", "root", "");

					pst = conn.prepareStatement("insert into prescription (presDate, presOwner, presPet, presVet, medication, dosage, form, quantity, frequency, presNotes) values(?,?,?,?,?,?,?,?,?,?)");
					pst.setString(1, date);
					pst.setString(2, owner);
					pst.setString(3, pet);
					pst.setString(4, vet);
					pst.setString(5, med);
					pst.setString(6, dose);
					pst.setString(7, form);
					pst.setString(8, qty);
					pst.setString(9, freq);
					pst.setString(10, note);
					pst.executeUpdate();

					JOptionPane.showMessageDialog(null, "Record successfully added!");
					tableUpdate();

					// clear all fields
					chDate.setDate(null);
					txtOwnName.setText("");
					txtPetName.setText("");
					txtVetName.setText("");
					txtMed.setText("");
					txtDose.setText("");
					txtForm.setText("");
					txtQty.setText("");
					txtFreq.setText("");
					txtNotes.setText("");
					
					// focus on the first field
					txtOwnName.requestFocus();
				}

				catch (Exception ev) {
					{
						System.out.println(ev);
					}
					;
				}
			}

		});

		// This is the table.
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setViewportBorder(null);
		scrollPane.setBounds(390, 73, 539, 479);
		scrollPane.addPropertyChangeListener(new PropertyChangeListener() {
			public void propertyChange(PropertyChangeEvent evt) {
			}
		});
		contentPane.add(scrollPane);

		tblPresRecords = new JTable();
		tblPresRecords.setAlignmentY(0.1f);
		tblPresRecords.setBorder(new LineBorder(new Color(0, 0, 0)));
		tblPresRecords.setFont(new Font("Arial", Font.PLAIN, 12));
		tblPresRecords.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		tblPresRecords.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				DefaultTableModel dtm = (DefaultTableModel) tblPresRecords.getModel();
				int selectedIndex = tblPresRecords.getSelectedRow();

				chDate.setDateFormatString(dtm.getValueAt(selectedIndex, 1).toString());
				txtOwnName.setText(dtm.getValueAt(selectedIndex, 2).toString());
				txtPetName.setText(dtm.getValueAt(selectedIndex, 3).toString());
				txtVetName.setText(dtm.getValueAt(selectedIndex, 4).toString());
				txtMed.setText(dtm.getValueAt(selectedIndex, 5).toString());
				txtDose.setText(dtm.getValueAt(selectedIndex, 6).toString());
				txtForm.setText(dtm.getValueAt(selectedIndex, 7).toString());
				txtQty.setText(dtm.getValueAt(selectedIndex, 8).toString());
				txtFreq.setText(dtm.getValueAt(selectedIndex, 9).toString());
				txtNotes.setText(dtm.getValueAt(selectedIndex, 10).toString());
			}

		});

		tblPresRecords.setModel(new DefaultTableModel(
			new Object[][] {
			},
			new String[] {
				"Pres. ID", "Pres. Date", "Owner Name", "Pet Name", "Veterinarian", "Medication", "Dosage", "Form", "Quantity", "Frequency", "Notes"
			}
		));
		// set alignment of values to center
		DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
		centerRenderer.setHorizontalAlignment( JLabel.CENTER );
		tblPresRecords.setDefaultRenderer(String.class, centerRenderer); // header
		tblPresRecords.setDefaultRenderer(Object.class, centerRenderer); // values
	    
		// set column width to preferred
		tblPresRecords.getColumnModel().getColumn(1).setPreferredWidth(150); //pet name
	    tblPresRecords.getColumnModel().getColumn(2).setPreferredWidth(150); //vet name
		scrollPane.setViewportView(tblPresRecords);

		JButton btnDisplay = new JButton("DISPLAY RECORDS");
		btnDisplay.setBounds(470, 563, 179, 23);
		btnDisplay.setFont(new Font("Tahoma", Font.PLAIN, 14));
		contentPane.add(btnDisplay);
		
		JButton btnPrint = new JButton("PRINT");
		btnPrint.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btnPrint.setBounds(696, 563, 179, 23);
		contentPane.add(btnPrint);
		
		btnDisplay.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				tableUpdate();
			}
		});
		
		JButton btnNewButton = new JButton("Back");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				MainEra mr = new MainEra();
				mr.setVisible(true);
				dispose();
			}
		});
		
		btnNewButton.setBounds(21, 565, 89, 23);
		contentPane.add(btnNewButton);

		//Background
		Image bg = new ImageIcon(this.getClass().getResource("/bgtunay.png")).getImage();
		JLabel default_bg = new JLabel("");
		default_bg.setBounds(0, 0, 968, 624);
		contentPane.add(default_bg);
		default_bg.setIcon(new ImageIcon(bg));
	}
	

	public TableModel getTableModel() {
		return tblPresRecords.getModel();
	}

	public void setTableModel(TableModel model) {
		tblPresRecords.setModel(model);
	}
}
